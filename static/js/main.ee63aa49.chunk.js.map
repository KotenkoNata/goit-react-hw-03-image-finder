{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Container/Container.module.css","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/pixabayApi.js","components/Container/Container.js","App.js","index.js","components/SearchBar/SearchBar.module.css"],"names":["module","exports","SearchBar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","styles","Searchbar","SearchForm","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","setLargeImage","onClick","src","webformatURL","alt","tags","ImageGallery","children","protoTypes","PropTypes","node","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","img","largeImageUrl","createPortal","Overlay","fetchImages","page","per_page","axios","get","process","then","response","data","hits","Container","App","images","isLoading","showModal","selectedImage","error","onChangeQuery","searchQuery","getImages","options","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","largeImageURL","toggleModal","prevProps","shouldRenderLoadMoreButton","length","map","id","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee63aa49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1C-z-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SearchBar.module.css';\n\nclass SearchBar extends Component {\n  state = { query: '' };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = event => {\n    this.setState({ query: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type={'submit'} className={styles['SearchForm-button']}>\n            <span className={styles['SearchForm-button-label']}>Search</span>\n          </button>\n\n          <input\n            className={styles['SearchForm-input']}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            query={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ image, setLargeImage }) => {\n  return (\n    <li\n      className={styles.ImageGalleryItem}\n      onClick={() => setLargeImage(image)}\n    >\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className={styles['ImageGalleryItem-image']}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }).isRequired,\n  setLargeImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ children }) => {\n  return <ul className={styles.ImageGallery}>{children}</ul>;\n};\n\nImageGallery.protoTypes = {\n  children: PropTypes.node,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button type=\"button\" className={styles.Button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  //clean Listner\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const img = this.props.largeImageUrl;\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>\n          <img src={img} alt={'Gallery'} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n//https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\nconst fetchImages = ({ query = '', page = 1, per_page = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\n    )\n    .then(response => response.data)\n    .then(data => data.hits);\n};\n\nexport { fetchImages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport SearchBar from './components/SearchBar';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nimport { fetchImages } from './services/pixabayApi';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    isLoading: false,\n    //add controler for modal window\n    showModal: false,\n    selectedImage: '',\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.getImages();\n    }\n  }\n\n  onChangeQuery = searchQuery => {\n    this.setState({\n      images: [],\n      query: searchQuery,\n      page: 1,\n      showModal: false,\n      selectedImage: '',\n      error: null,\n    });\n  };\n\n  getImages = () => {\n    const { page, query } = this.state;\n\n    const options = {\n      query,\n      page,\n    };\n\n    this.setState({ isLoading: true });\n\n    fetchImages(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }));\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  setLargeImage = image => {\n    this.setState({ selectedImage: image.largeImageURL });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, error, showModal, selectedImage } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n    return (\n      <div className={'App'}>\n        <SearchBar onSubmit={this.onChangeQuery} />\n        <Container>\n          <ImageGallery>\n            {this.state.images.map(image => (\n              <ImageGalleryItem\n                key={image.id}\n                image={image}\n                setLargeImage={this.setLargeImage}\n              />\n            ))}\n          </ImageGallery>\n          {error && <h1>Error</h1>}\n          {isLoading && (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#303f9f\"\n              height={80}\n              width={80}\n              className=\"loader\"\n            />\n          )}\n        </Container>\n        {shouldRenderLoadMoreButton && <Button onLoadMore={this.getImages} />}\n        {showModal && (\n          <Modal largeImageUrl={selectedImage} onClose={this.toggleModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__19WMJ\",\"SearchForm\":\"SearchBar_SearchForm__1k1JW\",\"SearchForm-button\":\"SearchBar_SearchForm-button__2mMXm\",\"SearchForm-button-label\":\"SearchBar_SearchForm-button-label__O1gsH\",\"SearchForm-input\":\"SearchBar_SearchForm-input__2-V0U\"};"],"sourceRoot":""}